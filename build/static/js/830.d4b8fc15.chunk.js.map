{"version":3,"file":"static/js/830.d4b8fc15.chunk.js","mappings":"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","sources":["webpack://my-app/./src/feautures/subjectExam/ui/subjectExamStl.module.css?3be3","webpack://my-app/./src/feautures/subjectExamItem/ui/subjectExamItemsStl.module.css?4efb","feautures/subjectExamItem/ui/subjectExamItemScp.tsx","feautures/subjectExamItem/index.tsx","feautures/subjectExam/ui/subjectExamScp.tsx","feautures/subjectExam/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"subject_exma_item_content\":\"subjectExamStl_subject_exma_item_content__ZKwcO\",\"subject_exma_item_content_1_title\":\"subjectExamStl_subject_exma_item_content_1_title__rkpVK\",\"subject_exma_item_content_2_item\":\"subjectExamStl_subject_exma_item_content_2_item__WELnt\",\"subject_exma_item_content_2_item_1_item_1\":\"subjectExamStl_subject_exma_item_content_2_item_1_item_1__xqOUm\",\"subject_exma_item_content_2_item_2_item\":\"subjectExamStl_subject_exma_item_content_2_item_2_item__bUDe+\",\"subject_exma_item_content_2_item_1_item_2\":\"subjectExamStl_subject_exma_item_content_2_item_1_item_2__pIgz9\",\"subject_exma_item_content_sec_col_2\":\"subjectExamStl_subject_exma_item_content_sec_col_2__ZpIsL\",\"subject_exma_item_content_2_item_3_item\":\"subjectExamStl_subject_exma_item_content_2_item_3_item__8aAIX\",\"subject_exma_item_content_2_item_1_item\":\"subjectExamStl_subject_exma_item_content_2_item_1_item__rImEZ\",\"hover\":\"subjectExamStl_hover__QblPN\",\"subject_exma_item_content_sec_col\":\"subjectExamStl_subject_exma_item_content_sec_col__rMbI8\",\"subject_exma_item_content_sec_col_content\":\"subjectExamStl_subject_exma_item_content_sec_col_content__y+6Wk\",\"subject_exma_item_content_sec_col_1\":\"subjectExamStl_subject_exma_item_content_sec_col_1__BKRlx\",\"exam_mdl_content_title\":\"subjectExamStl_exam_mdl_content_title__-Hus1\",\"exam_mdl_content_txt_1\":\"subjectExamStl_exam_mdl_content_txt_1__5yEbQ\",\"exam_mdl_content_txt\":\"subjectExamStl_exam_mdl_content_txt__9u+ug\",\"subject_exma_item_content_sec_col_loader\":\"subjectExamStl_subject_exma_item_content_sec_col_loader__qcU72\",\"exam_mdl_content_txt_3\":\"subjectExamStl_exam_mdl_content_txt_3__ih53Q\"};","// extracted by mini-css-extract-plugin\nexport default {\"subject_exma_item_content_2_item_2_item_1\":\"subjectExamItemsStl_subject_exma_item_content_2_item_2_item_1__5cvfj\",\"subject_exma_item_content_2_item_2_item_1_in_item\":\"subjectExamItemsStl_subject_exma_item_content_2_item_2_item_1_in_item__RVqD9\",\"subject_exam_item_qw\":\"subjectExamItemsStl_subject_exam_item_qw__obnOO\",\"subject_exam_item_qw_sec_col\":\"subjectExamItemsStl_subject_exam_item_qw_sec_col__yEh74\",\"subject_exma_item_content_2_item_2_item_1_print_content_1\":\"subjectExamItemsStl_subject_exma_item_content_2_item_2_item_1_print_content_1__ysjNr\"};","import React, { useEffect, useState } from 'react'\nimport styles from './subjectExamItemsStl.module.css'\nimport { OwnProps } from './subjectExamItemTs.interface'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from 'entities/store/redux-store'\nimport { SubjectType } from 'entities/subjectR/subjectReducerTs.interface'\nimport { changeAllBetaTest, changeAllTest, changeIsRndItm, getTestName, getTestSubjectName, updateTestsArr } from 'entities/testR/testReducer'\nimport { useNavigate } from 'react-router-dom'\nimport { saveSubjectNameFunc } from 'entities/subjectR/subjectReducer'\nimport { Col, Dropdown, MenuProps, Row } from 'antd'\n\nconst SubjectExamItemComp: React.FC<OwnProps> = ({ name, subjectName }) => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const allExams = useSelector((state: AppStateType) => state.subjectR.allExams)\n\n    const [subjectArr, setSubjectArr] = useState<Array<SubjectType>>(allExams)\n\n\n    useEffect(() => {\n        setSubjectArr(allExams)\n    }, [allExams])\n\n    const generateFsttest = (subjectName: string, examName: string) => {\n        subjectArr.map((val) => {\n            if (val.subjectName === subjectName) {\n                val.exams.map((val1) => {\n                    if (val1.name === examName) {\n                        dispatch(changeAllTest({ info: val1.info }))\n\n                        navigate('/test-without-anwers-exams')\n                        // downloadFile()\n\n\n                    }\n                })\n            }\n        })\n    }\n\n\n\n\n\n\n    const generateTsttest = (subjectName: string, examName: string) => {\n        subjectArr.map((val) => {\n            if (val.subjectName === subjectName) {\n                val.exams.map((val1) => {\n                    if (val1.name === examName) {\n                        dispatch(changeAllTest({ info: val1.info }))\n\n                        navigate('/test-answers-exams')\n                        // downloadFile()\n\n\n                    }\n                })\n            }\n        })\n    }\n\n\n    const generateForthsttest = (subjectName: string, examName: string) => {\n        subjectArr.map((val) => {\n            if (val.subjectName === subjectName) {\n                val.exams.map((val1) => {\n                    if (val1.name === examName) {\n\n                        // dispatch(updateTestsArr())\n                        dispatch(getTestName({ info: examName }))\n                        dispatch(saveSubjectNameFunc({ info: examName }))\n                        dispatch(getTestSubjectName({ info: subjectName }))\n                        dispatch(changeAllBetaTest({ info: val1.info }))\n                        dispatch(changeAllTest({ info: val1.info }))\n                        dispatch(changeIsRndItm(true))\n\n                        navigate('/test-items')\n                        // downloadFile()\n\n\n                    }\n                })\n            }\n        })\n    }\n\n\n    const items: MenuProps['items'] = [\n        {\n            key: '1',\n            label: (\n                <div onClick={() => generateFsttest(subjectName, name)} className={styles.subject_exma_item_content_2_item_2_item_1_print_content_1}>\n                    print by test\n                </div>\n            ),\n        },\n        {\n            key: '2',\n            label: (\n                <div onClick={() => generateTsttest(subjectName, name)} className={styles.subject_exma_item_content_2_item_2_item_1_print_content_1}>\n                    print by answers test\n\n                </div>\n            ),\n        }\n    ];\n\n\n    return (\n        // <Dropdown menu={{ items }} placement=\"bottomLeft\">\n        <Row className={styles.subject_exam_item_qw}>\n            <Col span={12}>\n                <button className={styles.subject_exma_item_content_2_item_2_item_1_in_item} onClick={() => generateForthsttest(subjectName, name)}>\n                    {name}\n                </button>\n            </Col>\n            <Col span={12} className={styles.subject_exam_item_qw_sec_col}>\n                <button onClick={() => generateFsttest(subjectName, name)} className={styles.subject_exma_item_content_2_item_2_item_1_print_content_1}>\n                    print by test\n                </button>\n                <button onClick={() => generateTsttest(subjectName, name)} className={styles.subject_exma_item_content_2_item_2_item_1_print_content_1}>\n                    print by answers test\n\n                </button>\n            </Col>\n        </Row>\n    )\n}\n\nexport default SubjectExamItemComp","import SubjectExamItemComp from './ui/subjectExamItemScp'\n\nexport default SubjectExamItemComp","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styles from './subjectExamStl.module.css'\nimport { OwnProps } from './subjectExamTs.interface'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { changeAllTest, changeIsRndItm, changeTestName, getOtherInfo, getTestSubjectName, updateTestsArr } from 'entities/testR/testReducer'\nimport { saveSubjectNameFunc } from 'entities/subjectR/subjectReducer'\nimport { AppStateType, useAppDispatch } from 'entities/store/redux-store'\nimport { SubjectType } from 'entities/subjectR/subjectReducerTs.interface'\nimport SubjectExamItemComp from 'feautures/subjectExamItem'\nimport { Col, Input, Modal, Row, Select } from 'antd'\n\nimport pic from '../images/1.png'\nimport loader from '../images/2.gif'\nimport { changeSubjectPicFunc, getExamsFunc } from 'entities/subjectR/subjectReducerThunk'\nimport { AllExamInfoType } from 'entities/testR/testReducerTs.interface'\n\n\nconst SubjectExamComp: React.FC<OwnProps> = ({ }) => {\n\n    const navigate = useNavigate()\n\n    const dispatch = useDispatch()\n\n    const [isShowExamItems, setIsShowExamItems] = useState<boolean>(false)\n\n    const [examName, setExamName] = useState<string>('')\n\n\n\n\n\n    const params = useParams()\n    const aDispatch = useAppDispatch()\n\n    const [chAnsQuest, setChAnsQuest] = useState<AllExamInfoType>({\n        examYear: 0,\n        examType: '',\n        subjectName: '',\n        classNumber: '',\n        teachersName: ''\n    });\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setChAnsQuest((prevData) => ({\n            ...prevData,\n            [name]: value,\n        }));\n    };\n\n    const generateTestFunc: () => void = () => {\n        // dispatch(updateTestsArr())\n\n        dispatch(changeIsRndItm(true))\n\n        dispatch(changeTestName({ info: examName }))\n        // dispatch(saveSubjectNameFunc({ info: val.subjectName }))\n        dispatch(getTestSubjectName({ info: params.id }))\n\n        dispatch(updateTestsArr())\n        dispatch(getOtherInfo({ info: chAnsQuest }))\n\n        navigate('/test-items')\n    }\n\n    console.log(params, 'paramsparamsparams')\n    const [currentSubject, setCurrentSubject] = useState<SubjectType | null>(null)\n\n    const allTextsArr = useSelector((state: AppStateType) => state.subjectR.allExams)\n    const [allTextsArrHk, setAllTextsArrHk] = useState<Array<SubjectType>>(allTextsArr)\n\n    useEffect(() => {\n        console.log('ccccccccccc')\n        aDispatch(getExamsFunc())\n    }, [])\n\n    useEffect(() => {\n        setAllTextsArrHk(allTextsArr)\n    }, [allTextsArr])\n\n    useEffect(() => {\n        allTextsArrHk.map((val: SubjectType) => {\n            console.log(val, 'after')\n            if (val.subjectName === params.id) {\n                console.log(val)\n                setCurrentSubject(val)\n            }\n        })\n    }, [allTextsArrHk])\n\n    console.log(currentSubject, 'currentSubject')\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const showModal = () => {\n        setIsModalOpen(true);\n    };\n\n    const [currentWrongItem, setCurrentWrongItem] = useState<number | null>(null)\n\n    const handleOk = () => {\n\n\n        if (examName && chAnsQuest.classNumber && chAnsQuest.examType && chAnsQuest.examYear && chAnsQuest.subjectName && chAnsQuest.teachersName) {\n            setIsModalOpen(false);\n            generateTestFunc()\n            setCurrentWrongItem(null)\n        } else {\n            switch (true) {\n                case !examName:\n                    setCurrentWrongItem(1)\n                    break\n                case !chAnsQuest.examYear:\n                    setCurrentWrongItem(2)\n                    break\n                case !chAnsQuest.subjectName:\n                    setCurrentWrongItem(3)\n                    break\n                case !chAnsQuest.classNumber:\n                    setCurrentWrongItem(4)\n                    break\n                case !chAnsQuest.teachersName:\n                    setCurrentWrongItem(5)\n                    break\n                default:\n                    return null\n\n            }\n        }\n    };\n\n    const handleCancel = () => {\n        setIsModalOpen(false);\n    };\n\n\n    const [selectedSbjImage, setSelectedSbjImage] = useState<string | null>('');\n\n    const setImageSbjFunc = (e: ChangeEvent<HTMLInputElement>) => {\n        const fileInput = e.target;\n        const selectedFile = fileInput.files && fileInput.files[0];\n\n        // console.log(selectedFile, 'selectedFile')\n\n        if (selectedFile) {\n            const reader = new FileReader();\n\n            // console.log(reader, 'reader')\n            reader.onload = (e) => {\n                setSelectedSbjImage(e.target?.result as string);\n            };\n\n\n            reader.readAsDataURL(selectedFile);\n        }\n    }\n\n    useEffect(() => {\n        console.log(currentSubject?.subjectName, 'currentSubject?.subjectName')\n\n        if (selectedSbjImage && currentSubject?.subjectName) {\n            aDispatch(changeSubjectPicFunc({ subjectName: currentSubject?.subjectName, picture: selectedSbjImage }))\n\n        }\n    }, [selectedSbjImage])\n\n    const loadComp = useSelector((state: AppStateType) => state.subjectR.loading)\n    const [loadCompHk, setLoadCompHk] = useState<boolean>(loadComp)\n\n    useEffect(() => {\n        setLoadCompHk(loadComp)\n    }, [loadComp])\n\n\n\n    console.log(chAnsQuest, 'chAnsQuest')\n\n    const slctHandleInputChange = (value: string) => {\n        console.log(`selected ${value}`);\n        if (!value) {\n            value = 'Միասնական քննություն'\n        }\n        chAnsQuest.examType = value\n        console.log(chAnsQuest, 'chAnsQuest')\n    };\n\n\n    return (\n        <>\n            <div className={styles.subject_exma_item_content}>\n                <div className={styles.subject_exma_item_content_1_title}>\n                    {currentSubject?.subjectName}\n                </div>\n                <Row>\n                    <Col span={17}>\n                        <div className={styles.subject_exma_item_content_2_item}>\n                            <div className={styles.subject_exma_item_content_2_item_2_item}>\n                                {\n                                    currentSubject?.exams.map((val2) => {\n                                        return (\n                                            <SubjectExamItemComp subjectName={val2.subjjectName} name={val2.name} />\n                                        )\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </Col>\n                    <Col span={7} className={styles.subject_exma_item_content_sec_col}>\n                        <div className={styles.subject_exma_item_content_sec_col_content}>\n                            <div className={styles.subject_exma_item_content_sec_col_1}>\n                                Թեստի նկարը\n                            </div>\n                            <div className={styles.subject_exma_item_content_sec_col_2}>\n                                <input type=\"file\" onChange={setImageSbjFunc} accept=\"image/png, image/jpeg\" />\n                            </div>\n                        </div>\n                        {\n                            loadCompHk\n                                ?\n                                <div className={styles.subject_exma_item_content_sec_col_loader}>\n                                    <img src={loader} alt=\"\" />\n                                </div>\n                                :\n                                null\n                        }\n\n                        <div className={styles.subject_exma_item_content_sec_col_2}>\n                            <img src={selectedSbjImage ? selectedSbjImage : ''} alt=\"\" />\n                        </div>\n                    </Col>\n                </Row>\n                <div className={styles.subject_exma_item_content_2_item_3_item}>\n                    <button onClick={showModal}>\n                        Ավելացնել քննություն\n                    </button>\n                </div>\n            </div>\n\n            <Modal\n                open={isModalOpen}\n                onOk={handleOk}\n                onCancel={handleCancel}\n                cancelText={<div>Չեղարկել</div>}\n                okText={<div>Հաստատել</div>}\n                closable={false}\n            >\n                <div className={styles.exam_mdl_content}>\n                    <div className={styles.exam_mdl_content_title}>\n                        Նոր թեստի ստեղծում\n                    </div>\n                    <div className={styles.exam_mdl_content_txt}>\n                        <div className={styles.test_content_in_items}>\n                            <div className={styles.test_content_in_items_1}>\n                                <div className={styles.exam_mdl_content_txt_1}>\n                                    Խնդրում ենք գրեք թեստի անվանումը\n                                </div>\n                                <div className={styles.exam_mdl_content_txt_2}>\n                                    <Input onChange={(e) => setExamName(e.target.value)} />\n                                </div>\n                                {\n                                    currentWrongItem === 1\n                                        ?\n                                        <div className={styles.exam_mdl_content_txt_3}>\n                                            Կներեք թեստի անվանումը սխալ է\n                                        </div>\n                                        : null\n                                }\n                            </div>\n                            <div className={styles.test_content_in_items_1}>\n                                <div className={styles.exam_mdl_content_txt_1}>\n                                    Խնդրում ենք նշեք քննության տարեթիվը\n                                </div>\n                                <div className={styles.test_content_in_items_1_2}>\n                                    <Input type=\"number\" name='examYear' onChange={handleInputChange} />\n                                </div>\n                                {\n                                    currentWrongItem === 2\n                                        ?\n                                        <div className={styles.exam_mdl_content_txt_3}>\n                                            Կներեք թեստի տարեթիվը սխալ է\n                                        </div>\n                                        : null\n                                }\n                            </div>\n                            <div className={styles.test_content_in_items_1}>\n                                <div className={styles.exam_mdl_content_txt_1}>\n                                    Խնդրում ենք նշեք քննության տեսակը\n                                </div>\n                                <div className={styles.test_content_in_items_1_2}>\n                                    <Select\n                                        // defaultValue=\"lucy\"\n                                        // name='examType'\n                                        style={{ width: '100%' }}\n                                        onChange={slctHandleInputChange}\n                                        options={[\n                                            { value: 'Միասնական քննություն', label: 'Միասնական քննություն' },\n                                            { value: 'Միջանկյալ քննություն', label: 'Միջանկյալ քննություն' }\n                                        ]}\n                                    />\n                                    {/* <Input type=\"text\" name='examType' onChange={handleInputChange} /> */}\n                                </div>\n                            </div>\n                            <div className={styles.test_content_in_items_1}>\n                                <div className={styles.exam_mdl_content_txt_1}>\n                                    Խնդրում ենք նշեք քննության առարկայի անունը\n                                </div>\n                                <div className={styles.test_content_in_items_1_2}>\n                                    <Input type=\"text\" name='subjectName' onChange={handleInputChange} />\n                                </div>\n                                {\n                                    currentWrongItem === 3\n                                        ?\n                                        <div className={styles.exam_mdl_content_txt_3}>\n                                            Կներեք թեստի տարեթիվը սխալ է\n                                        </div>\n                                        : null\n                                }\n                            </div>\n                            <div className={styles.test_content_in_items_1}>\n                                <div className={styles.exam_mdl_content_txt_1}>\n                                    Խնդրում ենք նշեք խմբի համարը\n                                </div>\n                                <div className={styles.test_content_in_items_1_2}>\n                                    <Input type=\"text\" name='classNumber' onChange={handleInputChange} />\n                                </div>\n                                {\n                                    currentWrongItem === 4\n                                        ?\n                                        <div className={styles.exam_mdl_content_txt_3}>\n                                            Կներեք թեստի տարեթիվը սխալ է\n                                        </div>\n                                        : null\n                                }\n                            </div>\n                            <div className={styles.test_content_in_items_1}>\n                                <div className={styles.exam_mdl_content_txt_1}>\n                                    Խնդրում ենք գրեք ուսուցչի անունը\n                                </div>\n                                <div className={styles.test_content_in_items_1_2}>\n                                    <Input type=\"text\" name='teachersName' onChange={handleInputChange} />\n                                </div>\n                                {\n                                    currentWrongItem === 5\n                                        ?\n                                        <div className={styles.exam_mdl_content_txt_3}>\n                                            Կներեք թեստի տարեթիվը սխալ է\n                                        </div>\n                                        : null\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        </>\n\n    )\n}\n\nexport default SubjectExamComp","import SubjectExamComp from './ui/subjectExamScp'\n\nexport default SubjectExamComp"],"names":["_ref","name","subjectName","navigate","useNavigate","dispatch","useDispatch","allExams","useSelector","state","subjectR","subjectArr","setSubjectArr","useState","useEffect","generateFsttest","examName","map","val","exams","val1","changeAllTest","info","generateTsttest","_jsxs","Row","className","styles","children","_jsx","Col","span","onClick","generateForthsttest","getTestName","saveSubjectNameFunc","getTestSubjectName","changeAllBetaTest","changeIsRndItm","isShowExamItems","setIsShowExamItems","setExamName","params","useParams","aDispatch","useAppDispatch","chAnsQuest","setChAnsQuest","examYear","examType","classNumber","teachersName","handleInputChange","e","value","target","prevData","console","log","currentSubject","setCurrentSubject","allTextsArr","allTextsArrHk","setAllTextsArrHk","getExamsFunc","id","isModalOpen","setIsModalOpen","currentWrongItem","setCurrentWrongItem","selectedSbjImage","setSelectedSbjImage","changeSubjectPicFunc","picture","loadComp","loading","loadCompHk","setLoadCompHk","_Fragment","subject_exma_item_content","subject_exma_item_content_1_title","subject_exma_item_content_2_item","subject_exma_item_content_2_item_2_item","val2","SubjectExamItemComp","subjjectName","subject_exma_item_content_sec_col","subject_exma_item_content_sec_col_content","subject_exma_item_content_sec_col_1","subject_exma_item_content_sec_col_2","type","onChange","fileInput","selectedFile","files","reader","FileReader","onload","_e$target","result","readAsDataURL","accept","subject_exma_item_content_sec_col_loader","src","loader","alt","subject_exma_item_content_2_item_3_item","showModal","Modal","open","onOk","handleOk","changeTestName","updateTestsArr","getOtherInfo","onCancel","handleCancel","cancelText","okText","closable","exam_mdl_content","exam_mdl_content_title","exam_mdl_content_txt","test_content_in_items","test_content_in_items_1","exam_mdl_content_txt_1","exam_mdl_content_txt_2","Input","exam_mdl_content_txt_3","test_content_in_items_1_2","Select","style","width","concat","options","label"],"sourceRoot":""}