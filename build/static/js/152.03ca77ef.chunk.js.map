{"version":3,"file":"static/js/152.03ca77ef.chunk.js","mappings":"2IACA,QAAkC,oCAAlC,EAAkG,8CAAlG,EAAwL,0DAAxL,EAA4R,4DAA5R,EAAoY,8DAApY,EAA8e,8DAA9e,EAAwlB,8D,yECYxlB,MCXA,EDWwCA,KAEpC,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,MAEEC,EAAAA,EAAAA,KAAaC,GAAwBA,EAAMC,OAAOC,WAGlET,EAAS,WAGbU,EAAAA,EAAAA,YAAU,KACNN,GAAUO,EAAAA,EAAAA,MAAe,GAC1B,IAEH,MAAMC,GAAkBN,EAAAA,EAAAA,KAAaC,GAAwBA,EAAMM,SAASC,YACrEC,EAAmBC,IAAwBC,EAAAA,EAAAA,UAA6BL,IAE/EF,EAAAA,EAAAA,YAAU,KACNM,EAAqBJ,EAAgB,GACtC,CAACA,IAGJ,MAAOM,EAAaC,IAAkBF,EAAAA,EAAAA,UAAiB,KAEvDP,EAAAA,EAAAA,YAAU,KACNR,GAASkB,EAAAA,EAAAA,IAAyB,CAAEC,KAAM,KAAM,GACjD,IAsBH,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAuBC,UACnCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiCC,UAC7CC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAA6CC,SAAA,EACzDC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAA+CC,SAAA,EAC3DH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiDC,SAAC,6KAGlEH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiDC,UAC7DH,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CAACC,SAAWC,GAAMV,EAAeU,EAAEC,OAAOC,eAGxDT,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiDC,UAC7DH,EAAAA,EAAAA,KAAA,UAAQU,QAjCYC,KACpC,GAAIf,EAAa,CACb,IAAIgB,EAAgD,GACpDnB,EAAkBoB,KAAI,CAACC,EAAKC,KACxBD,EAAIE,MAAMH,KAAI,CAACI,EAAMC,KACbD,EAAKE,UACDF,EAAKE,SAASvB,cAAgBA,GAC9BgB,EAAsBQ,KAAKH,EAEnC,GACF,IAGNrC,GAASkB,EAAAA,EAAAA,IAAyB,CAAEC,KAAMH,KAC1ChB,GAASyC,EAAAA,EAAAA,IAAqB,CAAEC,KAAMV,KACtClC,EAAS,gBACb,GAiBqDyB,SAAC,6DAIhD,C","sources":["webpack://my-app/./src/pages/student/ui/studentStl.module.css?ad68","pages/student/ui/studentScp.tsx","pages/student/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"student_content\":\"studentStl_student_content__PSYFT\",\"student_content_container\":\"studentStl_student_content_container__cJ9NA\",\"student_content_container_txt_content\":\"studentStl_student_content_container_txt_content__TzSFQ\",\"student_content_container_txt_content_1\":\"studentStl_student_content_container_txt_content_1__UfLN+\",\"student_content_container_txt_content_1_1\":\"studentStl_student_content_container_txt_content_1_1__byo7V\",\"student_content_container_txt_content_1_2\":\"studentStl_student_content_container_txt_content_1_2__S0ivE\",\"student_content_container_txt_content_btn\":\"studentStl_student_content_container_txt_content_btn__MHTyy\"};","import React, { useEffect, useState } from 'react'\nimport styles from './studentStl.module.css'\nimport { OwnProps } from './studentTs.interface'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType, useAppDispatch } from 'entities/store/redux-store'\nimport { QuestCountInfoType } from 'entities/nTestR/nTestReducerTs.interface'\nimport { CategoryInfoType } from 'entities/testR/testReducerTs.interface'\nimport { useNavigate } from 'react-router-dom'\nimport { SubjectExamType, SubjectType } from 'entities/subjectR/subjectReducerTs.interface'\nimport { getExamsFunc } from 'entities/subjectR/subjectReducerThunk'\nimport { changeExistsExamInfo, initClassCurrentNameFunc } from 'entities/student/studentReducer'\nimport { Input } from 'antd'\n\nconst StudentComp: React.FC<OwnProps> = () => {\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const aDispatch = useAppDispatch()\n\n    const isAdminItem = useSelector((state: AppStateType) => state.adminR.isAdmin)\n\n    if (isAdminItem) {\n        navigate('/admin')\n    }\n\n    useEffect(() => {\n        aDispatch(getExamsFunc())\n    }, [])\n\n    const allSubjectsInfo = useSelector((state: AppStateType) => state.subjectR.allExams)\n    const [allSubjectsInfoHk, setAllSubjectsInfoHk] = useState<Array<SubjectType>>(allSubjectsInfo)\n\n    useEffect(() => {\n        setAllSubjectsInfoHk(allSubjectsInfo)\n    }, [allSubjectsInfo])\n\n\n    const [classNumber, setClassNumber] = useState<string>('')\n\n    useEffect(() => {\n        dispatch(initClassCurrentNameFunc({ name: '' }))\n    }, [])\n\n    const saveClassNumberFunc: () => void = () => {\n        if (classNumber) {\n            let subjectExistsArrClone: Array<SubjectExamType> = []\n            allSubjectsInfoHk.map((val, ind) => {\n                val.exams.map((val1, ind1) => {\n                    if (val1.textInfo) {\n                        if (val1.textInfo.classNumber === classNumber) {\n                            subjectExistsArrClone.push(val1)\n                        }\n                    }\n                })\n            })\n\n            dispatch(initClassCurrentNameFunc({ name: classNumber }))\n            dispatch(changeExistsExamInfo({ info: subjectExistsArrClone }))\n            navigate('/exists-tests')\n        }\n\n    }\n\n    return (\n        <div className={styles.student_content}>\n            <div className={styles.student_content_container}>\n                <div className={styles.student_content_container_txt_content}>\n                    <div className={styles.student_content_container_txt_content_1}>\n                        <div className={styles.student_content_container_txt_content_1_1}>\n                            Խնդրում ենք գրեք Ձեր խմբի համարը\n                        </div>\n                        <div className={styles.student_content_container_txt_content_1_2}>\n                            <Input onChange={(e) => setClassNumber(e.target.value)} />\n                        </div>\n                    </div>\n                    <div className={styles.student_content_container_txt_content_btn}>\n                        <button onClick={saveClassNumberFunc}>Հաստատել</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default StudentComp","import StudentComp from './ui/studentScp'\n\nexport default StudentComp"],"names":["StudentComp","navigate","useNavigate","dispatch","useDispatch","aDispatch","useAppDispatch","useSelector","state","adminR","isAdmin","useEffect","getExamsFunc","allSubjectsInfo","subjectR","allExams","allSubjectsInfoHk","setAllSubjectsInfoHk","useState","classNumber","setClassNumber","initClassCurrentNameFunc","name","_jsx","className","styles","children","_jsxs","Input","onChange","e","target","value","onClick","saveClassNumberFunc","subjectExistsArrClone","map","val","ind","exams","val1","ind1","textInfo","push","changeExistsExamInfo","info"],"sourceRoot":""}